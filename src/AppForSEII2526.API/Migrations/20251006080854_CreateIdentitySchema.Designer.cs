// <auto-generated />
using System;
using AppForSEII2526.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppForSEII2526.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006080854_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppForSEII2526.API.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Bocadillo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PVP")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Tamanyo")
                        .HasColumnType("int");

                    b.Property<int>("TipoPanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoPanId");

                    b.ToTable("Bocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonoBocadillo", b =>
                {
                    b.Property<string>("BonoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<int>("NBocadillos")
                        .HasColumnType("int");

                    b.Property<string>("NombreBocadillo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PVP")
                        .HasColumnType("real");

                    b.Property<string>("TipoIdTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BonoID");

                    b.HasIndex("TipoIdTipo");

                    b.ToTable("BonoBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonosComprados", b =>
                {
                    b.Property<string>("BonoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompraId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CompraBonoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("PrecioBono")
                        .HasColumnType("real");

                    b.HasKey("BonoId", "CompraId");

                    b.HasIndex("CompraBonoId");

                    b.ToTable("BonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Property<int>("CompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompraID"));

                    b.Property<string>("Apellido_1Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido_2Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioTotal")
                        .HasColumnType("real");

                    b.Property<int>("nBocadillo")
                        .HasColumnType("int");

                    b.HasKey("CompraID");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.Property<int>("BocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("NombreBocadillo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<string>("TipoPan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BocadilloId", "CompraId");

                    b.HasIndex("CompraId");

                    b.ToTable("CompraBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.Property<string>("CompraBonoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido1Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompraBono")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPagoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("NBono")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioTotalBono")
                        .HasColumnType("real");

                    b.HasKey("CompraBonoId");

                    b.ToTable("ComprasBono");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra_Producto", b =>
                {
                    b.Property<string>("CompraID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_Envio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("Metodo_Pago")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioFinal")
                        .HasColumnType("real");

                    b.HasKey("CompraID");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.Property<string>("ProductoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PVP")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_ProductoProductoID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductoID");

                    b.HasIndex("Tipo_ProductoProductoID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto_Compra", b =>
                {
                    b.Property<string>("CompraID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<float>("PVP")
                        .HasColumnType("real");

                    b.HasKey("CompraID", "ProductoID");

                    b.HasIndex("ProductoID");

                    b.ToTable("Productos_Compras");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Resenya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValoracionGeneral")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resenyas");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ResenyaBocadillo", b =>
                {
                    b.Property<int>("BocadilloId")
                        .HasColumnType("int");

                    b.Property<int>("ResenyaId")
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("BocadilloId", "ResenyaId");

                    b.HasIndex("ResenyaId");

                    b.ToTable("ResenyaBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoBocadillo", b =>
                {
                    b.Property<string>("IdTipo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipo");

                    b.ToTable("TiposBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPan");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoProducto", b =>
                {
                    b.Property<string>("ProductoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoID");

                    b.ToTable("TiposProductos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Bocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoPan", "TipoPan")
                        .WithMany("Bocadillos")
                        .HasForeignKey("TipoPanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPan");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonoBocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoBocadillo", "Tipo")
                        .WithMany("ListaBonoBocadillos")
                        .HasForeignKey("TipoIdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonosComprados", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.BonoBocadillo", "BonoBocadillo")
                        .WithMany("ListaBonosComprados")
                        .HasForeignKey("BonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.CompraBono", "Comprabono")
                        .WithMany("ListaBonosComprados")
                        .HasForeignKey("CompraBonoId");

                    b.Navigation("BonoBocadillo");

                    b.Navigation("Comprabono");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Bocadillo", "Bocadillo")
                        .WithMany("CompraBocadillo")
                        .HasForeignKey("BocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Compra", "Compra")
                        .WithMany("CompraBocadillos")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bocadillo");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.TipoProducto", "Tipo_Producto")
                        .WithMany("Productos")
                        .HasForeignKey("Tipo_ProductoProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo_Producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto_Compra", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Compra_Producto", "Compra")
                        .WithMany("Productos_Compras")
                        .HasForeignKey("CompraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Producto", "Producto")
                        .WithMany("Productos_Compras")
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ResenyaBocadillo", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Bocadillo", "Bocadillo")
                        .WithMany("ResenyaBocadillo")
                        .HasForeignKey("BocadilloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Resenya", "Resenya")
                        .WithMany("ResenyaBocadillo")
                        .HasForeignKey("ResenyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bocadillo");

                    b.Navigation("Resenya");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Bocadillo", b =>
                {
                    b.Navigation("CompraBocadillo");

                    b.Navigation("ResenyaBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.BonoBocadillo", b =>
                {
                    b.Navigation("ListaBonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Navigation("CompraBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.CompraBono", b =>
                {
                    b.Navigation("ListaBonosComprados");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra_Producto", b =>
                {
                    b.Navigation("Productos_Compras");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Producto", b =>
                {
                    b.Navigation("Productos_Compras");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Resenya", b =>
                {
                    b.Navigation("ResenyaBocadillo");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoBocadillo", b =>
                {
                    b.Navigation("ListaBonoBocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoPan", b =>
                {
                    b.Navigation("Bocadillos");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.TipoProducto", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
